#!/usr/bin/env python

# Inspired by 
# https://gitfu.wordpress.com/2008/05/25/git-describe-great-another-way-to-refer-to-commits/
# http://gitready.com/beginner/2009/02/03/tagging.html


versionFile = "Version.elm"

#####################
## Get Version details
######################
import commands
status, version = commands.getstatusoutput ("git describe --tags --long")
if not status: 
	print ("Version: " + version)
else: 
	print "git describe return bad status!"
	version = "NA"
	# Need to exit gracefully
	# Now it continues!!! 

previous = None
try:
	fo = open (versionFile, "r")
	#print "Name of file opened ", fo.name 
	previous = fo.read()
	#print (previous)
	fo.close()
	
except:
	print ("Creating new version file...")


######
# Is it really necessary to update? 
######
if previous and previous.find (version) != -1:
	print ("Version.elm already up-to-date!")
else: 
	####################
	## build elm code 
	####################
	fileContent = \
	'''module Version exposing (..) -- where \n\
{-| This file is auto-generated by the Python script version.py. -} \n\
\n\
\n\
version : String \n\
'''

	fileContent = fileContent + 'version = "' + version + '"\n\n'

	##################
	## Just to be safe, we must backing up previous versionFile
	##################
	pass  # Not yet implemented 

	fo = open (versionFile, "w+")
	fo.write (fileContent)
	#print (fileContent)
	print ("Version.elm updated with " + version)
	fo.close()

